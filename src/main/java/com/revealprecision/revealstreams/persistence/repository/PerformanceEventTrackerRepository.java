package com.revealprecision.revealstreams.persistence.repository;


import com.revealprecision.revealstreams.persistence.domain.PerformanceEventTracker;
import com.revealprecision.revealstreams.persistence.projection.UserPerformanceDistrictAggregateProjection;
import java.util.List;
import java.util.UUID;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

@Repository
public interface PerformanceEventTrackerRepository extends
    JpaRepository<PerformanceEventTracker, UUID> {

  @Query(value = "SELECT \n"
      + "t.date,\n"
      + "t.district as district\n"
      + ",t.deviceUser as deviceUser"
      + ",sum(t.found) as found\n"
      + ",sum(t.sprayed)as sprayed\n"
      + ",sum(t.spray_summary) as spraySummary\n"
      + ",sum(t.found_summary) as foundSummary\n"
      + ",sum(t.sprayed)-sum(t.spray_summary) as sprayDiff\n"
      + ",sum(t.found)-sum(t.found_summary) as foundDiff\n"
      + ",string_agg(t.found_checked ,  '') as foundChecked\n"
      + ",string_agg(t.spray_checked ,  '') as sprayChecked\n"
      + ",case when (string_agg(t.spray_checked ,  '') !='') AND ((sum(t.sprayed)-sum(t.spray_summary)) = 0) AND ((sum(t.found)-sum(t.found_summary)) = 0) THEN true ELSE false END as checked\n"
      + "from ( "
      + "SELECT \n"
      + "  pet.submission_id as submission_id,\n"
      + "  make_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "  make_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "  pet.user_data->>'district' as district,\n"
      + "  pet.user_data->'deviceUser'->>'deviceUserName' as deviceUser,\n"
      + "  pet.user_data->>'fieldWorker' as fieldWorker,\n"
      + "  CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
      + "  CASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as int),0) as found_summary,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as int),0) as spray_summary,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as varchar),'')as found_checked,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as varchar),'')as spray_checked\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier) as t "
      + "WHERE t.deviceUser = :deviceUser\n"
      + "and t.date = current_date - INTEGER '1' \n"
      + "group by t.date,t.district,t.deviceUser", nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getDeviceUserQualityChecks(UUID planIdentifier,String deviceUser);

  @Query(value = "SELECT \n"
      + "t.date,\n"
      + "t.district as district\n"
      + ",sum(t.found) as found\n"
      + ",sum(t.sprayed)as sprayed\n"
      + ",sum(t.spray_summary) as spraySummary\n"
      + ",sum(t.found_summary) as foundSummary\n"
      + ",sum(t.sprayed)-sum(t.spray_summary) as sprayDiff\n"
      + ",sum(t.found)-sum(t.found_summary) as foundDiff\n"
      + ",string_agg(t.found_checked ,  '') as foundChecked\n"
      + ",string_agg(t.spray_checked ,  '') as sprayChecked\n"
      + ",case when (string_agg(t.spray_checked ,  '') !='') AND ((sum(t.sprayed)-sum(t.spray_summary)) = 0) AND ((sum(t.found)-sum(t.found_summary)) = 0) THEN true ELSE false END as checked\n"
      + "from ( "
      + "SELECT \n"
      + "  pet.submission_id as submission_id,\n"
      + "  make_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "  make_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "  pet.user_data->>'district' as district,\n"
      + "  pet.user_data->'deviceUser'->>'deviceUserName' as deviceUser,\n"
      + "  pet.user_data->>'fieldWorker' as fieldWorker,\n"
      + "  CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
      + "  CASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as int),0) as found_summary,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as int),0) as spray_summary,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as varchar),'')as found_checked,\n"
      + "  COALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as varchar),'')as spray_checked\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier) as t "
      + "WHERE t.district = :district\n"
      + "and t.date = current_date - INTEGER '1' \n"
      + "group by t.date,t.district", nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getDistrictQualityChecks(UUID planIdentifier,String district);

  @Query(value = "SELECT \n"
      + "cast(t.date as varchar) as date\n"
      + ",t.district as district\n"
      + ",t.deviceUser as deviceUser\n"
      + ",t.fieldWorker as fieldWorker\n"
      + ",sum(t.found) as found\n"
      + ",sum(t.sprayed)as sprayed\n"
      + ",sum(t.not_sprayed)as notSprayed\n"
      + ",sum(t.not_sprayed_other)as notSprayedOther\n"
      + ",sum(t.not_sprayed_refused)as notSprayedRefused \n"
      + ",sum(t.sachet_count) as sachetCount  \n"
      + ",min(t.time) as startTime\n"
      + ",max(t.time) as endTime\n"
      + ",cast(max(t.time) - min(t.time) as varchar) as durationWorked\n"
      + ", sum(t.sprayed)-sum(t.spray_summary)  as sprayDiff\n"
      + ", sum(t.found)-sum(t.found_summary)  as foundDiff\n"
      + ", string_agg(t.found_checked ,  '') as foundChecked\n"
      + ", string_agg(t.spray_checked ,  '') as sprayChecked\n"
      + "from (\n"
      + "SELECT\n"
      + "\tpet.submission_id as submission_id,\n"
      + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "\tdate_part('epoch',make_timestamp(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int),CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int))) as timestamp,\n"
      + "\tpet.user_data->>'district' as district,\n"
      + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUser,\n"
      + "\tpet.user_data->>'fieldWorker' as fieldWorker,\n"
      + "    CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT SPRAYED' = 'true' THEN 1 ELSE 0 END as not_sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_OTHER' = 'true' THEN 1 ELSE 0 END as not_sprayed_other,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_REFUSED' = 'true' THEN 1 ELSE 0 END as not_sprayed_refused,\n"
      + "    CAST(pet.user_data->'fields'->>'SACHET_COUNT'as int) as sachet_count,\n"
      + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as int),0) as found_summary,\n"
      + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as int),0) as spray_summary,\n"
      + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as varchar),'')as found_checked,\n"
      + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as varchar),'')as spray_checked\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier"
      + ") as t\n"
      + "WHERE t.fieldWorker = :fieldWorker \n"
      + "group by t.date, t.district,t.deviceUser,t.fieldWorker ", nativeQuery = true)

  List<UserPerformanceDistrictAggregateProjection> getFieldWorkerStats(UUID planIdentifier,String fieldWorker);

@Query(value = "SELECT \n"
    + "cast(t.date as varchar) as date\n"
    + ",t.district as district\n"
    + ",t.deviceUser as deviceUser\n"
    + ",sum(t.found) as found\n"
    + ",sum(t.sprayed)as sprayed\n"
    + ",sum(t.not_sprayed)as notSprayed\n"
    + ",sum(t.not_sprayed_other)as notSprayedOther\n"
    + ",sum(t.not_sprayed_refused)as notSprayedRefused \n"
    + ",sum(t.sachet_count) as sachetCount  \n"
    + ",min(t.time) as startTime\n"
    + ",max(t.time) as endTime\n"
    + ",cast(max(t.time) - min(t.time) as varchar) as durationWorked\n"
    + ", sum(t.sprayed)-sum(t.spray_summary)  as sprayDiff\n"
    + ", sum(t.found)-sum(t.found_summary)  as foundDiff\n"
    + ", string_agg(t.found_checked ,  '') as foundChecked\n"
    + ", string_agg(t.spray_checked ,  '') as sprayChecked\n"
    + "from (\n"
    + "SELECT\n"
    + "\tpet.submission_id as submission_id,\n"
    + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
    + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
    + "\tdate_part('epoch',make_timestamp(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int),CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int))) as timestamp,\n"
    + "\tpet.user_data->>'district' as district,\n"
    + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUser,\n"
    + "\tpet.user_data->>'fieldWorker' as fieldWorker,\n"
    + "    CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
    + " CASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
    + " CASE WHEN pet.user_data->'fields'->>'NOT SPRAYED' = 'true' THEN 1 ELSE 0 END as not_sprayed,\n"
    + " CASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_OTHER' = 'true' THEN 1 ELSE 0 END as not_sprayed_other,\n"
    + " CASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_REFUSED' = 'true' THEN 1 ELSE 0 END as not_sprayed_refused,\n"
    + "   CAST(pet.user_data->'fields'->>'SACHET_COUNT'as int) as sachet_count,\n"
    + " COALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as int),0) as found_summary,\n"
    + " COALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as int),0) as spray_summary,\n"
    + " COALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as varchar),'')as found_checked,\n"
    + " COALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as varchar),'')as spray_checked\n"
    + "From performance_event_tracker pet\n"
    + "WHERE pet.plan_identifier = :planIdentifier"
    + ") as t\n"
    + "WHERE t.deviceUser = :deviceUser \n"
    + "group by t.date, t.district,t.deviceUser ", nativeQuery = true)

List<UserPerformanceDistrictAggregateProjection> getDeviceUserStats(UUID planIdentifier,String deviceUser);

    @Query(value = "SELECT \n"
        + "cast(t.date as varchar) as date,\n"
        + "t.district as district\n"
        + ",sum(t.found) as found\n"
        + ",sum(t.sprayed)as sprayed\n"
        + ",sum(t.not_sprayed)as notSprayed\n"
        + ",sum(t.not_sprayed_other)as notSprayedOther\n"
        + ",sum(t.not_sprayed_refused)as notSprayedRefused \n"
        + ",sum(t.sachet_count) as sachetCount  \n"
        + ",min(t.time) as startTime\n"
        + ",max(t.time) as endTime\n"
        + ",cast(max(t.time) - min(t.time) as varchar)as durationWorked\n"
        + ", sum(t.sprayed)-sum(t.spray_summary)  as sprayDiff\n"
        + ", sum(t.found)-sum(t.found_summary)  as foundDiff\n"
        + ", string_agg(t.found_checked ,  '') as foundChecked\n"
        + ", string_agg(t.spray_checked ,  '') as sprayChecked\n"
        + "from (\n"
        + "SELECT\n"
        + "\tpet.submission_id as submission_id,\n"
        + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
        + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
        + "\tdate_part('epoch',make_timestamp(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int),CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int))) as timestamp,\n"
        + "\tpet.user_data->>'district' as district,\n"
        + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUserName,\n"
        + "\tpet.user_data->>'fieldWorker' as fieldWorker,\n"
        + "    CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
        + "\tCASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
        + "\tCASE WHEN pet.user_data->'fields'->>'NOT SPRAYED' = 'true' THEN 1 ELSE 0 END as not_sprayed,\n"
        + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_OTHER' = 'true' THEN 1 ELSE 0 END as not_sprayed_other,\n"
        + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_REFUSED' = 'true' THEN 1 ELSE 0 END as not_sprayed_refused,\n"
        + "    CAST(pet.user_data->'fields'->>'SACHET_COUNT'as int) as sachet_count,\n"
        + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as int),0) as found_summary,\n"
        + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as int),0) as spray_summary,\n"
        + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_FOUND_FROM_SUMMARY'as varchar),'')as found_checked,\n"
        + "\tCOALESCE(CAST(pet.user_data->'fields'->>'IRS_SPRAYED_FROM_SUMMARY'as varchar),'')as spray_checked\n"
        + "From performance_event_tracker pet\n"
        + "WHERE pet.plan_identifier = :planIdentifier"
        + ") as t\n"
        + "WHERE t.district = :district \n"
        + "group by t.date, t.district", nativeQuery = true)

    List<UserPerformanceDistrictAggregateProjection> getDistrictStats(UUID planIdentifier,String district);

  @Query(value = "SELECT \n"
      + "t.district as district\n"
      + ",t.deviceUser as deviceUser\n"
      + ",t.fieldWorker as fieldWorker"
      + ",sum(t.found) as found\n"
      + ",sum(t.sprayed)as sprayed\n"
      + ",sum(t.not_sprayed)as notSprayed\n"
      + ",sum(t.not_sprayed_other)as notSprayedOther\n"
      + ",sum(t.not_sprayed_refused)as notSprayedRefused \n"
      + ",sum(t.sachet_count) as sachetCount  \n"
      + ",min(t.time) as startTime\n"
      + ",max(t.time) as endTime\n"
      + ",count(t.date) as daysWorked\n"
      + " from (\n"
      + "SELECT\n"
      + "\tpet.submission_id as submission_id,\n"
      + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "\tdate_part('epoch',make_timestamp(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int),CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int))) as timestamp,\n"
      + "\tpet.user_data->>'district' as district,\n"
      + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUser,\n"
      + "\tpet.user_data->>'fieldWorker' as fieldWorker,\n"
      + "    CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT SPRAYED' = 'true' THEN 1 ELSE 0 END as not_sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_OTHER' = 'true' THEN 1 ELSE 0 END as not_sprayed_other,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_REFUSED' = 'true' THEN 1 ELSE 0 END as not_sprayed_refused,\n"
      + "    CAST(pet.user_data->'fields'->>'SACHET_COUNT'as int) as sachet_count\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier\n"
      + ") as t\n"
      + "WHERE t.deviceUser = :deviceUser\n"
      + "group by t.district, t.deviceUser, t.fieldWorker", nativeQuery = true)

  List<UserPerformanceDistrictAggregateProjection> getIndividualDeviceUserAggregatedStats(UUID planIdentifier, String deviceUser);

  @Query(value = "SELECT \n"
      + "t.district as district\n"
      + ",t.deviceUser as deviceUser\n"
      + ",t.fieldWorker as fieldWorker\n"
      + ",count(t.date) as daysWorked FROM (\n"
      + "SELECT\n"
      + "\tDISTINCT make_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date\n"
      + ",pet.user_data->>'district' as district\n"
      + ",pet.user_data->'deviceUser'->>'deviceUserName' as deviceUser\n"
      + ",pet.user_data->>'fieldWorker' as fieldWorker\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier"
      + ") as t\n"
      + "WHERE t.deviceUser = :deviceUser\n"
      + "group by t.district,t.deviceUser, t.fieldWorker", nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getIndividualDeviceUserDaysWorkedAggregatedStats(UUID planIdentifier, String deviceUser);

  @Query(value = "SELECT \n"
      + "b.district as district,\n"
      + "b.deviceUser as deviceUser,\n"
      + "b.fieldWorker as fieldWorker,"
      + "\tCAST(avg(b.starttime)  as varchar) as averageStartTime,\n"
      + "\tCAST(avg(b.endtime)   as varchar) as averageEndTime,\n"
      + "\tCAST(avg(b.hoursWorked)   as varchar) as averageDuration\n"
      + "from (\n"
      + "SELECT \n"
      + "\t t.date, t.district, t.deviceUser, t.fieldWorker\n"
      + ",min(t.time) as starttime , max(t.time) as endtime,\n"
      + "\tmax(t.time) - min(t.time) as hoursWorked\n"
      + "FROM (\n"
      + "SELECT\n"
      + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "\tpet.user_data->>'district' as district,\n"
      + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUser,\n"
      + "\tpet.user_data->>'fieldWorker' as fieldWorker\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier\n"
      + "\t) as t\n"
      + "\twhere t.fieldWorker is not null\n"
      + "\tgroup by t.date, t.district, t.deviceUser, t.fieldWorker\n"
      + "\t) as b\n"
      + "WHERE b.deviceUser = :deviceUser and b.hoursWorked != CAST('00:00:00' as time)\n"
      + "\tgroup by \n"
      + "\tb.district, b.deviceUser,b.fieldWorker",nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getIndividualDeviceUserHoursWorkedAggregateStats(UUID planIdentifier, String deviceUser);


  @Query(value = "SELECT \n"
      + "t.district as district\n"
      + ",t.deviceUserName as deviceUser\n"
      + ",sum(t.found) as found\n"
      + ",sum(t.sprayed)as sprayed\n"
      + ",sum(t.not_sprayed)as notSprayed\n"
      + ",sum(t.not_sprayed_other)as notSprayedOther\n"
      + ",sum(t.not_sprayed_refused)as notSprayedRefused \n"
      + ",sum(t.sachet_count) as sachetCount  \n"
      + ",min(t.time) as startTime\n"
      + ",max(t.time) as endTime\n"
      + ",count(t.date) as daysWorked\n"
      + " from (\n"
      + "SELECT\n"
      + "\tpet.submission_id as submission_id,\n"
      + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "\tdate_part('epoch',make_timestamp(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int),CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int))) as timestamp,\n"
      + "\tpet.user_data->>'district' as district,\n"
      + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUserName,\n"
      + "\tpet.user_data->>'fieldWorker' as fieldWorker,\n"
      + "    CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT SPRAYED' = 'true' THEN 1 ELSE 0 END as not_sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_OTHER' = 'true' THEN 1 ELSE 0 END as not_sprayed_other,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_REFUSED' = 'true' THEN 1 ELSE 0 END as not_sprayed_refused,\n"
      + "    CAST(pet.user_data->'fields'->>'SACHET_COUNT'as int) as sachet_count\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier\n"
      + ") as t\n"
      + "WHERE t.district = :district\n"
      + "group by t.district, t.deviceUserName", nativeQuery = true)

  List<UserPerformanceDistrictAggregateProjection> getIndividualDistrictAggregatedStats(UUID planIdentifier, String district);

  @Query(value = "SELECT \n"
      + "t.district as district\n"
      + ",t.deviceUser as deviceUser\n"
      + ",count(t.date) as daysWorked FROM (\n"
      + "SELECT\n"
      + "\tDISTINCT make_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date\n"
      + ",pet.user_data->>'district' as district\n"
      + ",pet.user_data->'deviceUser'->>'deviceUserName' as deviceUser\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier"
      + ") as t\n"
      + "WHERE t.district = :district\n"
      + "group by t.district,t.deviceUser", nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getIndividualDistrictDaysWorkedAggregatedStats(UUID planIdentifier, String district);

  @Query(value = "SELECT \n"
      + "b.district as district,\n"
      + "b.deviceUserName as deviceUser,\n"
      + "\tCAST(avg(b.starttime)  as varchar) as averageStartTime,\n"
      + "\tCAST(avg(b.endtime)   as varchar) as averageEndTime,\n"
      + "\tCAST(avg(b.hoursWorked)   as varchar) as averageDuration\n"
      + "from (\n"
      + "SELECT \n"
      + "\t t.date, t.district, t.deviceUserName, t.fieldWorker\n"
      + ",min(t.time) as starttime , max(t.time) as endtime,\n"
      + "\tmax(t.time) - min(t.time) as hoursWorked\n"
      + "FROM (\n"
      + "SELECT\n"
      + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "\tpet.user_data->>'district' as district,\n"
      + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUserName,\n"
      + "\tpet.user_data->>'fieldWorker' as fieldWorker\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier\n"
      + "\t) as t\n"
      + "\twhere t.fieldWorker is not null\n"
      + "\tgroup by t.date, t.district, t.deviceUserName, t.fieldWorker\n"
      + "\t) as b\n"
      + "WHERE b.district = :district and b.hoursWorked != CAST('00:00:00' as time)\n"
      + "\tgroup by \n"
      + "\tb.district, b.deviceUserName",nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getIndividualDistrictHoursWorkedAggregateStats(UUID planIdentifier, String district);


  @Query(value = "SELECT \n"
      + "t.district as district"
      + ",sum(t.found) as found\n"
      + ",sum(t.sprayed)as sprayed\n"
      + ",sum(t.not_sprayed)as notSprayed\n"
      + ",sum(t.not_sprayed_other)as notSprayedOther\n"
      + ",sum(t.not_sprayed_refused)as notSprayedRefused \n"
      + ",sum(t.sachet_count) as sachetCount  \n"
      + ",min(t.time) as startTime\n"
      + ",max(t.time) as endTime\n"
      + ",count(t.date) as daysWorked\n"
      + " from (\n"
      + "SELECT\n"
      + "\tpet.submission_id as submission_id,\n"
      + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "\tdate_part('epoch',make_timestamp(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int),CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int))) as timestamp,\n"
      + "\tpet.user_data->>'district' as district,\n"
      + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUserName,\n"
      + "\tpet.user_data->>'fieldWorker' as fieldWorker,\n"
      + "    CASE WHEN pet.user_data->'fields'->>'FOUND' = 'true' THEN 1 ELSE 0 END as found,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'SPRAYED' = 'true' THEN 1 ELSE 0 END as sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT SPRAYED' = 'true' THEN 1 ELSE 0 END as not_sprayed,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_OTHER' = 'true' THEN 1 ELSE 0 END as not_sprayed_other,\n"
      + "\tCASE WHEN pet.user_data->'fields'->>'NOT_SPRAYED_REFUSED' = 'true' THEN 1 ELSE 0 END as not_sprayed_refused,\n"
      + "    CAST(pet.user_data->'fields'->>'SACHET_COUNT'as int) as sachet_count\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier\n"
      + ") as t\n"
      + "group by t.district", nativeQuery = true)

  List<UserPerformanceDistrictAggregateProjection> getAllDistrictAggregatedStats(UUID planIdentifier);


  @Query(value = "SELECT \n"
      + "t.district as district\n"
      + ",count(t.date) as daysWorked FROM (\n"
      + "SELECT\n"
      + "\tDISTINCT make_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tpet.user_data->>'district' as district\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier"
      + ") as t\n"
      + "\n"
      + "group by t.district", nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getAllDistrictDaysWorkedAggregatedStats(UUID planIdentifier);

  @Query(value = "SELECT \n"
      + "b.district,\n"
      + "\tCAST(avg(b.starttime)  as varchar) as averageStartTime,\n"
      + "\tCAST(avg(b.endtime)   as varchar) as averageEndTime,\n"
      + "\tCAST(avg(b.hoursWorked)   as varchar) as averageDuration\n"
      + "from (\n"
      + "SELECT \n"
      + "\t t.date, t.district, t.deviceUserName, t.fieldWorker\n"
      + ",min(t.time) as starttime , max(t.time) as endtime,\n"
      + "\tmax(t.time) - min(t.time) as hoursWorked\n"
      + "FROM (\n"
      + "SELECT\n"
      + "\tmake_date(CAST(pet.user_data->'captureTime'->0 as int),CAST(pet.user_data->'captureTime'->1 as int),CAST(pet.user_data->'captureTime'->2 as int)) as date,\n"
      + "\tmake_time(CAST(pet.user_data->'captureTime'->3 as int),CAST(pet.user_data->'captureTime'->4 as int),CAST(pet.user_data->'captureTime'->5 as int)) as time,\n"
      + "\tpet.user_data->>'district' as district,\n"
      + "\tpet.user_data->'deviceUser'->>'deviceUserName' as deviceUserName,\n"
      + "\tpet.user_data->>'fieldWorker' as fieldWorker\n"
      + "From performance_event_tracker pet\n"
      + "WHERE pet.plan_identifier = :planIdentifier\n"
      + "\t) as t\n"
      + "\twhere t.fieldWorker is not null\n"
      + "\tgroup by t.date, t.district, t.deviceUserName, t.fieldWorker\n"
      + "\t) as b\n"
      + "WHERE  b.hoursWorked != CAST('00:00:00' as time)\n"
      + "\tgroup by \n"
      + "\tb.district",nativeQuery = true)
  List<UserPerformanceDistrictAggregateProjection> getAllDistrictHoursWorkedAggregateStats(UUID planIdentifier);

}
